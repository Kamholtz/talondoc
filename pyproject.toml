[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "talondoc"
version = "0.1.0"
description = "A Sphinx extension for Talon user directories."
readme = "README.md"
requires-python = ">=3.9"
keywords = ["talondoc"]
authors = [{ name = "Wen Kokke" }]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Compilers",
]
dependencies = ["Sphinx==5.1.1", "tree_sitter_talon==3.0.5"]

[project.optional-dependencies]
mypy = [
  "types-docutils"
]

[project.urls]
repository = "https://github.com/wenkokke/talondoc"

[project.scripts]
talondoc = "talondoc:cli"

[tool.setuptools.package-data]
talondoc = ["py.typed"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
exclude = []

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:"]
minversion = "6.0"
testpaths = ["tests"]

[tool.bumpver]
current_version = "0.1.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
  '^current_version = "{version}"$',
  '^version = "{version}"$',
]
"source/conf.py" = ['^release = "{version}"$']
"talondoc/__init__.py" = ['^__version__: str = "{version}"$']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39,py310
isolated_build = True

[testenv]
deps =
"""
